# - docker build -t udagram-api-feed ./udagram-api-feed
# - docker build -t udagram-api-user ./udagram-api-user
# - docker build -t udagram-reverseproxy ./udagram-reverseproxy
# - docker build -t udagram-frontend ./udagram-frontend
# - docker-compose -f docker-compose-build.yaml build --parallel

language: udagram-micro
node_js:
  - 16

services:
  - docker

# Pre-testing installs
install:
  - echo "nothing needs to be installed"

# Scripts to be run such as tests
before_script:
  - echo "no tests"

script:
  - docker --version # print the version for logging
  - docker-compose -f docker-compose-build.yaml build --parallel
  # - docker build -t udagram-api-feed ./udagram-api-feed
  - docker tag udagram-api-feed dduythien/udagram-api-feed:latest

  # - docker build -t udagram-api-user ./udagram-api-user
  - docker tag udagram-api-user dduythien/udagram-api-user:latest

  # - docker build -t reverseproxy ./udagram-reverseproxy
  - docker tag reverseproxy dduythien/reverseproxy:latest

  # - docker build -t udagram-frontend ./udagram-frontend
  - docker tag udagram-frontend dduythien/udagram-frontend:latest

# Tasks to perform after the process is successful. Formatting the Docker username and password as below enables you to programmatically log in without having the password exposed in logs.
after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push dduythien/udagram-api-feed:latest
  - docker push dduythien/udagram-api-user:latest
  - docker push dduythien/reverseproxy:latest
  - docker push dduythien/udagram-frontend:latest
